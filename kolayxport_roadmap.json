{
  "metadata": {
    "generatedBy": "KolayXport LLM",
    "generatedAt": "2025-05-11T00:00:00Z",
    "description": "Full roadmap for migrating from Google Scripts/Sheets to a Vercel+Supabase stack with detailed phases, database schema, APIs, UI, and future extensions."
  },
  "phases": [
    {
      "phase": 1,
      "title": "Foundations & Infra",
      "description": "Set up core infra on Supabase and Vercel.",
      "status": "Completed",
      "completion_notes": "Core infrastructure on Supabase and Vercel established. Vercel cron job frequency adjusted from '*/15 * * * *' to '0 0 * * *' due to Hobby plan limitations. Supabase client and auth context (lib/supabase.js, lib/auth-context.js) created.",
      "steps": [
        "Create Supabase project: enable Auth & Database.",
        "Configure Vercel env vars for NEXT_PUBLIC_SUPABASE_URL, NEXT_PUBLIC_SUPABASE_ANON_KEY, SUPABASE_SERVICE_ROLE_KEY, API keys for Veeqo, Trendyol, Shippo, etc.",
        "Set up Vercel Cron for scheduled tasks."
      ]
    },
    {
      "phase": 2,
      "title": "Database Modeling",
      "description": "Design Postgres schema for users, configs, orders, line items, and label jobs.",
      "status": "Completed and Extended",
      "completion_notes": "Prisma schema (prisma/schema.prisma) implemented for User, MarketplaceConfig, Order, OrderItem, LabelJob. Extended with Product, Inventory, MarketplaceProduct for inventory management. User model significantly updated with various specific fields (googleSheetId, API keys, etc.).",
      "schema": {
        "User": [
          "id",
          "email",
          "createdAt"
        ],
        "MarketplaceConfig": [
          "id",
          "userId",
          "name",
          "config JSON"
        ],
        "Order": [
          "id",
          "marketplace",
          "marketplaceKey",
          "createdAt",
          "customerName",
          "status",
          "shipByDate"
        ],
        "OrderItem": [
          "id",
          "orderId",
          "sku",
          "quantity",
          "notes"
        ],
        "LabelJob": [
          "id",
          "itemId",
          "carrier",
          "status",
          "pdfUrl",
          "errorMessage",
          "timestamps"
        ]
      }
    },
    {
      "phase": 3,
      "title": "Auth & Settings UI",
      "description": "Implement user signup/login and Ayarlar screen for entering marketplace & carrier API keys.",
      "status": "Completed",
      "completion_notes": "User authentication implemented using custom Supabase Auth (useAuth hook) after refactoring away from next-auth. Settings UI (pages/app/settings.js) built for API key management, saving to Prisma.",
      "steps": [
        "Use Supabase Auth for email or OAuth.",
        "Build `/ayarlar` React page: form to create/edit MarketplaceConfig entries stored in Supabase.",
        "Server-side validation of credentials on save."
      ]
    },
    {
      "phase": 4,
      "title": "API Endpoints for Core Actions",
      "description": "Develop APIs for order sync, label generation, and settings.",
      "status": "Completed and Refactored",
      "completion_notes": "Initial API endpoints for order sync, label generation, and settings created. Order sync and Google Sheets/Apps Script related endpoints (e.g., /api/syncOrders, /api/getOrders, /api/onboarding/setup, /api/gscript/*) have been REMOVED as part of decoupling from Google Sheets. Label generation (/api/generateLabel) is mocked and interacts with Prisma. Settings (/api/setScriptProps) updates user data in Prisma. All Supabase authentication helpers upgraded from @supabase/auth-helpers-* to @supabase/ssr to resolve cookie issues and use current best practices.",
      "steps": [
        "Implement `POST /api/labels/generate` to enqueue or run label-gen.",
        "Update LabelJob status & store PDF in Supabase Storage or alternative.",
        "Return signed URL to front-end."
      ]
    },
    {
      "phase": 5,
      "title": "Sipari\u015fler Dashboard",
      "description": "React UI to display orders and generate labels.",
      "status": "Completed",
      "completion_notes": "Orders dashboard created as components/OrdersTable.jsx (refactored from pages/siparisler.js), displaying orders and allowing label generation.",
      "features": [
        "Table with image, name, variant, status, ship-by, marketplace key.",
        "Checkbox or button per line-item to trigger label generation via API.",
        "Visual feedback & link to PDF."
      ]
    },
    {
      "phase": 6,
      "title": "Label Generation Service",
      "description": "Server-side API to call carriers (Shippo, Veeqo) and store PDF URLs.",
      "status": "Completed",
      "completion_notes": "Label generation service (/api/generateLabel.js) implemented. Initially planned for direct carrier calls, current version uses a mock generateShippingLabel function that interacts with Prisma LabelJob for tracking and storing a mock PDF URL. Actual carrier integration via this Next.js API is pending.",
      "steps": [
        "Implement `POST /api/labels/generate` to enqueue or run label-gen.",
        "Update LabelJob status & store PDF in Supabase Storage or alternative.",
        "Return signed URL to front-end."
      ]
    },
    {
      "phase": 7,
      "title": "Dashboard & Analytics",
      "description": "User dashboard for daily sales, order counts, and key metrics.",
      "status": "Completed",
      "completion_notes": "Main dashboard (pages/app/index.js) created, incorporating onboarding logic. Analytics dashboard (pages/dashboard.js) also created. DashboardLandingContent provides initial overview.",
      "features": [
        "Daily sales chart (line, bar) using React chart library.",
        "Aggregates: total orders, revenue, shipped vs pending.",
        "Filter by date range and marketplace."
      ]
    },
    {
      "phase": 8,
      "title": "Deployment & Iteration",
      "description": "Deploy to Vercel, test thoroughly, gather feedback, and iterate.",
      "status": "In Progress - Critical Bug Fixing",
      "completion_notes": "Initial deployment to Vercel. Faced several build/runtime issues. Path alias issues with jsconfig.json resolved. Git history and project structure cleaned up. Next-auth completely removed and replaced with Supabase auth. Ongoing: Resolved Google Apps Script dependencies and runtime cookie errors by migrating to @supabase/ssr. Dashboard UI for old GSheet onboarding removed. Login/redirect flow being actively debugged.",
      "steps": [
        "Deploy to Vercel",
        "Test thoroughly",
        "Gather feedback",
        "Iterate based on feedback"
      ]
    }
  ]
}